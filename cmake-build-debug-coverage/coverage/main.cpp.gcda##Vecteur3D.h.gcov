        -:    0:Source:/home/noureddine/CLionProjects/Vecteur3D/Vecteur3D.h
        -:    0:Graph:/home/noureddine/CLionProjects/Vecteur3D/cmake-build-debug-coverage/CMakeFiles/Vecteur3D.dir/main.cpp.gcno
        -:    0:Data:/home/noureddine/CLionProjects/Vecteur3D/cmake-build-debug-coverage/CMakeFiles/Vecteur3D.dir/main.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by noureddine on 12/13/21.
        -:    3://
        -:    4:
        -:    5:#ifndef VECTEUR3D_VECTEUR3D_H
        -:    6:#define VECTEUR3D_VECTEUR3D_H
        -:    7:
        -:    8:#include <algorithm>
        -:    9:#include <iterator>
        -:   10:#include <iostream>
        -:   11:
        -:   12:template<class T>
        -:   13:class Vecteur3d {
        -:   14:public:
        -:   15:    explicit Vecteur3d(int x=0, int y=0, int z=0);
        -:   16:    int get(int i) const;
        -:   17:    bool operator==(const Vecteur3d& v) const;
        -:   18:    Vecteur3d& operator*(int i) const;
        -:   19:    void afficher() const;
        -:   20:private:
        -:   21:    int x, y, z;
        -:   22:};
        -:   23:
        -:   24:template<class T>
function _ZN9Vecteur3dIiEC2Eiii called 1 returned 100% blocks executed 100%
        1:   25:Vecteur3d<T>::Vecteur3d(int x, int y, int z):x(x), y(y), z(z){
        -:   26:
        1:   27:}
        -:   28:
        -:   29:template<class T>
        -:   30:int Vecteur3d<T>::get(int i) const {
        -:   31:    return 0;
        -:   32:}
        -:   33:
        -:   34:template<class T>
        -:   35:bool Vecteur3d<T>::operator==(const Vecteur3d &v) const {
        -:   36:    return ((x == v.x) && (y == v.y) && (z == v.z));;
        -:   37:}
        -:   38:
        -:   39:template<class T>
        -:   40:Vecteur3d<T> &Vecteur3d<T>::operator*(int i) const {
        -:   41:    Vecteur3d<T> v(x*i,y*i,z*i);
        -:   42:    return v;
        -:   43:}
        -:   44:
        -:   45:template<class T>
function _ZNK9Vecteur3dIiE8afficherEv called 1 returned 100% blocks executed 100%
        1:   46:void Vecteur3d<T>::afficher() const {
        1:   47: std::cout << x << " " << y << " " << z << " " << std::endl;
        1:   47-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
call    4 returned 1
call    5 returned 1
call    6 returned 1
        1:   48:}
        -:   49:
        -:   50:
        -:   51:#endif //VECTEUR3D_VECTEUR3D_H
